# Use this Blueprint to deploy n8n on Render with a Postgres database
# for workflow data persistence. Following official n8n render blueprint.

services:
  - type: web
    plan: free
    name: n8n-service
    runtime: image
    image:
      url: docker.io/n8nio/n8n:latest
    healthCheckPath: /healthz
    autoDeploy: false
    envVars:
      # Encryption Key - Keeps workflows and credentials secure
      - key: N8N_ENCRYPTION_KEY
        generateValue: true

      # Database Configuration - Using official database property format
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_DATABASE
        fromDatabase:
          name: n8n-db
          property: database
      - key: DB_POSTGRESDB_HOST
        fromDatabase:
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_PASSWORD
        fromDatabase:
          name: n8n-db
          property: password
      - key: DB_POSTGRESDB_USER
        fromDatabase:
          name: n8n-db
          property: user
      
      # Custom Extensions - Community nodes installation
      - key: N8N_CUSTOM_EXTENSIONS
        value: n8n-nodes-comfyui
      
      # Security Settings
      - key: N8N_BASIC_AUTH_ACTIVE
        value: true
      - key: N8N_BASIC_AUTH_USER
        value: admin
      - key: N8N_BASIC_AUTH_PASSWORD
        generateValue: true
      
      # Performance Optimization
      - key: N8N_METRICS
        value: true
      
      # Execution Mode
      - key: EXECUTIONS_PROCESS
        value: main
      - key: EXECUTIONS_MODE
        value: regular
      
      # API Keys - For n8n-MCP Integration
      - key: N8N_PUBLIC_API_ENABLED
        value: true
      - key: N8N_PUBLIC_API_DISABLED_METHODS
        value: ""

databases:
  - name: n8n-db
    plan: free
    # The free instance type is limited to 1 GB of disk space.
    ipAllowList: [] # Only allow internal connections
